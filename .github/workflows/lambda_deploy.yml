name: Deploy Lambda with ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0

      - name: Set image target
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_OIDC_ARN}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ./infra
        run: |
          terraform init

      - name: Terraform Apply (ECR + IAM)
        working-directory: ./infra
        run: |
          terraform apply -auto-approve -target=module.ecr -target=module.policies -var="image_tag=$IMAGE_TAG"

      - name: Get ECR URI
        run: echo "IMAGE_URI=$(cd infra && terraform output -raw ecr_repositor_url)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_URI:$IMAGE_TAG .

      - name: Push Docker Image to ECR
        run: |
          REGISTRY_URI=$(echo $IMAGE_URI | cut -d'/' -f1)
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY_URI
          docker push $IMAGE_URI:$IMAGE_TAG

      - name: Terraform Apply Lambda
        working-directory: ./infra
        run: |
          terraform apply -auto-approve -var="image_tag=$IMAGE_TAG"
